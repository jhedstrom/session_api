Index: session_api.module
===================================================================
RCS file: /cvs/drupal-contrib/contributions/modules/session_api/session_api.module,v
retrieving revision 1.1.2.3
diff -u -r1.1.2.3 session_api.module
--- session_api.module	19 Sep 2008 17:06:14 -0000	1.1.2.3
+++ session_api.module	22 Feb 2009 23:39:49 -0000
@@ -28,11 +28,11 @@
   }
 
   if (!is_numeric($_SESSION['session_api_id'])) {
-    // first, check if id exists in db
+    // First, check if id exists in db.
     $sid = db_result(db_query("SELECT sid FROM {session_api} WHERE session_id = '%s'", session_id()));
     
     if (!$sid) {
-      // no sid exists, create new one
+      // No sid exists, create new one.
       $rec = new stdClass();
       $rec->session_id = session_id();
       drupal_write_record('session_api', $rec);
@@ -64,15 +64,15 @@
  * Implementation of hook_cron().
  */
 function session_api_cron() {
-  // should any cleanup be run
+  // Check if any cleanup be run.
   if (!variable_get('session_api_run_cron_session_api', FALSE)) {
     return;
   }
 
-  // find modules that have this hook
+  // Find modules that have this hook.
   $modules = module_implements('session_api_cleanup');
 
-  // run Session API hook first
+  // Run Session API hook first.
   array_unshift($modules, 'session_api');
   $modules = array_unique($modules);
 
@@ -109,10 +109,10 @@
 
     case 'run':
     default:
-      // fetch list of outdated sids
+      // Fetch list of outdated sids.
       $result = db_query("SELECT sap.sid FROM {session_api} sap LEFT JOIN {sessions} s ON (sap.session_id = s.sid) WHERE s.sid IS NULL");
       while ($session = db_fetch_object($result)) {
-       // remove the session api id
+       // Remove the session api id.
         db_query("DELETE FROM {session_api} WHERE sid = %d", $session->sid);
       }
   }
Index: session_api.test
===================================================================
RCS file: /cvs/drupal-contrib/contributions/modules/session_api/session_api.test,v
retrieving revision 1.1.2.3
diff -u -r1.1.2.3 session_api.test
--- session_api.test	22 Sep 2008 17:40:25 -0000	1.1.2.3
+++ session_api.test	22 Feb 2009 23:39:49 -0000
@@ -34,15 +34,15 @@
     $this->assertFalse(session_api_available(), t('Function session_api_available() correctly returns FALSE when cookies are disabled.'));
     $this->assertFalse(session_api_get_sid(), t('Function session_api_get_sid() correctly returns FALSE when cookies are disabled.'));
 
-    // enable cookies
+    // Enable cookies.
     $_COOKIE = $old_cookie;
 
-    // Find correct sid
+    // Find correct sid.
     $fake_sid = rand(1, 2000000);
     $_SESSION['session_api_id'] = $fake_sid;
     $this->assertTrue(session_api_get_sid() == $fake_sid, t('Function session_api_get_sid() returns expected value.'));
 
-    // Store ID in the db
+    // Store ID in the db.
     session_id(md5(rand(1, 20000)));
     $rec = new stdClass();
     $rec->session_id = session_id();
@@ -50,7 +50,7 @@
     $_SESSION['session_api_id'] = NULL;
     $this->assertTrue(session_api_get_sid() == $rec->sid, 'Function session_api_get_sid() correctly retrieves the session_api_id from the database.');
 
-    // restore pre-testing values
+    // Restore pre-testing values.
     $_COOKIE = $old_cookie;
     $_SESSION['session_api_id'] = $old_session_api_id;
     db_query("DELETE FROM {session_api} WHERE session_id = '%s'", session_id());
Index: session_api.admin.inc
===================================================================
RCS file: /cvs/drupal-contrib/contributions/modules/session_api/session_api.admin.inc,v
retrieving revision 1.1.2.3
diff -u -r1.1.2.3 session_api.admin.inc
--- session_api.admin.inc	9 Jul 2008 15:32:31 -0000	1.1.2.3
+++ session_api.admin.inc	22 Feb 2009 23:39:49 -0000
@@ -11,7 +11,7 @@
  * Session API admin settings form.
  */
 function session_api_settings_form() {
-  // find modules that implement hook_session_api_cleanup()
+  // Find modules that implement hook_session_api_cleanup().
   $modules = module_implements('session_api_cleanup');
 
   $form['maintenance'] = array(
@@ -22,12 +22,12 @@
     '#collapsed' => FALSE,
   );
 
-  // throw Session API to the top
+  // Throw Session API to the top.
   array_unshift($modules, 'session_api');
   $modules = array_unique($modules);
 
   foreach ($modules as $module) {
-    // gather module-specific information about the cleanup process each on
+    // Gather module-specific information about the cleanup process each on
     // implements.
     $info = module_invoke($module, 'session_api_cleanup', 'info');
     $form['maintenance']['session_api_run_cron_' . $module] = array(
